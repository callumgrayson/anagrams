{"version":3,"sources":["helpers/createTree.js","components/Loader.js","components/v1.js","App.js","index.js"],"names":["setWordsToObject","list","len","length","wordsObj","currentNode","i","word","lenWord","j","char","end","hasOwnProperty","handleData","a","split","map","w","toLowerCase","checkAnagrams","iWord","inArr","inWord","trim","console","log","startSearch","Date","now","inLength","inWordSorted","sort","join","temp","forEach","Number","push","endSearch","durationSearch","getXLengthWords","wArr","sorted","xLengthAnagrams","Object","values","arr","startSort","sortedAnagrams","b","endSort","durationSort","Loader","props","className","loading","text","V1","useState","listSize","setListSize","searchTerm","setSearchTerm","searchInput","setSearchInput","displayAnagrams","setDisplayAnagrams","searchNumber","setSearchNumber","searchNumberInput","setSearchNumberInput","displayLengthAnagrams","setDisplayLengthAnagrams","tree","setTree","wordsArray","setWordsArray","isFetching","setIsFetching","isSearchLet","setIsSearchLet","isSearchLen","setIsSearchLen","useEffect","getUrl","data","localStorage","url","fetch","res","setItem","getItem","start","wTree","dur","newTree","newArr","getData","getAnagrams","inTerm","anags","handleSubmit","e","preventDefault","handleLengthSubmit","value","onChange","target","onSubmit","type","maxLength","placeholder","required","onClick","ana","key","min","max","style","width","0","outObj","el","keys","prepareLengthAnagrams","obj","Array","isArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3528aa2.chunk.js","sourcesContent":["//\r\nconst setWordsToObject = (list) => {\r\n\tconst len = list.length;\r\n\tlet wordsObj = {};\r\n\tlet currentNode = {};\r\n\r\n\t// iterate through list or words\r\n\tfor (let i = 0; i < len; i++) {\r\n\t\tlet word = list[i];\r\n\t\tlet lenWord = word.length;\r\n\t\tcurrentNode = wordsObj;\r\n\r\n\t\t// iterate through chars in word\r\n\t\tfor (let j = 0; j < lenWord; j++) {\r\n\t\t\tlet char = word[j];\r\n\t\t\tlet end = j === lenWord - 1 ? true : false;\r\n\t\t\tlet nodeExists = currentNode.hasOwnProperty(char);\r\n\r\n\t\t\tif (!nodeExists) {\r\n\t\t\t\tcurrentNode[char] = { end: end };\r\n\t\t\t} else {\r\n\t\t\t\tif (currentNode[char].end === false && end === true) {\r\n\t\t\t\t\tcurrentNode[char].end = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurrentNode = currentNode[char];\r\n\t\t}\r\n\t}\r\n\treturn wordsObj;\r\n};\r\n\r\nexport const handleData = async (list) => {\r\n\tconst split = list.split('\\n').map((w) => w.toLowerCase());\r\n\r\n\tconst wordsObj = setWordsToObject(split);\r\n\r\n\treturn [ wordsObj, split ];\r\n};\r\n\r\nexport const checkAnagrams = async (iWord, inArr) => {\r\n\tlet inWord = iWord.trim().toLowerCase();\r\n\tconsole.log('inWord', inWord);\r\n\tlet startSearch = Date.now();\r\n\tconst inLength = inWord.length;\r\n\tconst inWordSorted = inWord.split('').sort().join('');\r\n\tlet temp = [];\r\n\tinArr.forEach((word) => {\r\n\t\tif (word.length === Number(inLength)) {\r\n\t\t\tconst sorted = word.split('').sort().join('');\r\n\t\t\tif (sorted === inWordSorted) {\r\n\t\t\t\ttemp.push(word);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tlet endSearch = Date.now();\r\n\tlet durationSearch = endSearch - startSearch;\r\n\tconsole.log('durationSearch', durationSearch);\r\n\r\n\t// console.log('temp', temp);\r\n\treturn temp;\r\n};\r\n\r\nexport const getXLengthWords = async (inLength, wArr) => {\r\n\t//\r\n\tlet startSearch = Date.now();\r\n\tlet temp = {};\r\n\twArr.forEach((word) => {\r\n\t\tif (word.length === Number(inLength)) {\r\n\t\t\tconst sorted = word.split('').sort().join('');\r\n\t\t\tif (!temp.hasOwnProperty(sorted)) {\r\n\t\t\t\ttemp[sorted] = [ word ];\r\n\t\t\t} else {\r\n\t\t\t\ttemp[sorted] = [ ...temp[sorted], word ];\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tconst xLengthAnagrams = [];\r\n\tObject.values(temp).forEach((arr) => {\r\n\t\tif (arr.length > 1) xLengthAnagrams.push(arr);\r\n\t});\r\n\tlet endSearch = Date.now();\r\n\tlet durationSearch = endSearch - startSearch;\r\n\r\n\tlet startSort = Date.now();\r\n\tconst sortedAnagrams = xLengthAnagrams.sort((a, b) => b.length - a.length);\r\n\tlet endSort = Date.now();\r\n\tlet durationSort = endSort - startSort;\r\n\r\n\t// console.log('sortedAnagrams', sortedAnagrams);\r\n\tconsole.log('durationSearch', durationSearch);\r\n\tconsole.log('durationSort', durationSort);\r\n\treturn sortedAnagrams;\r\n};\r\n\r\n////////////////////////////////////////////////////\r\n// const checkNode = (inNode) => {\r\n// \tconst { currentNode, preArr, restArr } = inNode;\r\n// \tconst nextObjects = [];\r\n// \tconst len = restArr.length;\r\n\r\n// \tif (len === 1) {\r\n// \t\t// we are checking for the last letter\r\n// \t\t// if it exists and end is true we have a match\r\n// \t\tlet finalChar = restArr[0];\r\n// \t\tif (\r\n// \t\t\tcurrentNode.hasOwnProperty(finalChar) &&\r\n// \t\t\tcurrentNode[finalChar].end === true\r\n// \t\t) {\r\n// \t\t\tconst match = [ ...preArr, finalChar ].join('');\r\n// \t\t\tnextObjects.push({ match: match });\r\n// \t\t}\r\n// \t} else {\r\n// \t\tfor (let i = 0; i < len; i++) {\r\n// \t\t\tlet before = [ ...restArr.slice(0, i) ];\r\n// \t\t\tlet char = restArr[i];\r\n// \t\t\tlet after = [ ...restArr.slice(i + 1) ];\r\n\r\n// \t\t\tif (char && currentNode.hasOwnProperty(char)) {\r\n// \t\t\t\tconst newObj = {\r\n// \t\t\t\t\tcurrentNode: currentNode[char],\r\n// \t\t\t\t\tpreArr: [ ...preArr, char ],\r\n// \t\t\t\t\trestArr: [ ...before, ...after ]\r\n// \t\t\t\t};\r\n// \t\t\t\tnextObjects.push(newObj);\r\n// \t\t\t}\r\n// \t\t}\r\n// \t}\r\n\r\n// \treturn nextObjects;\r\n// };\r\n\r\n// export const checkAnagrams = async (inWord, inTree) => {\r\n// \t// Search and timings\r\n// \tlet startSearch = Date.now();\r\n// \tconst wArr = inWord.split('');\r\n// \tlet q = [ { currentNode: inTree, preArr: [], restArr: wArr } ];\r\n// \tlet anagramsSet = new Set();\r\n\r\n// \twhile (q.length) {\r\n// \t\tlet c = q.shift();\r\n\r\n// \t\tif (c.restArr.length) {\r\n// \t\t\tlet nodeInfo = checkNode(c);\r\n// \t\t\t// console.log('nodeInfo', nodeInfo);\r\n// \t\t\tnodeInfo.forEach((el) => {\r\n// \t\t\t\tif (el.hasOwnProperty('match')) {\r\n// \t\t\t\t\tanagramsSet.add(el.match);\r\n// \t\t\t\t} else {\r\n// \t\t\t\t\tq.push(el);\r\n// \t\t\t\t}\r\n// \t\t\t});\r\n// \t\t}\r\n// \t}\r\n// \tconst anagrams = Array.from(anagramsSet);\r\n// \tlet endSearch = Date.now();\r\n// \tlet durationSearch = endSearch - startSearch;\r\n// \tconsole.log('durationSearch', durationSearch);\r\n// \t// console.log('anagrams', anagrams);\r\n// \treturn anagrams;\r\n// };\r\n","import React from 'react';\r\n\r\nconst Loader = (props) => {\r\n\treturn (\r\n\t\t<div className=\"loaderBox\">\r\n\t\t\t{props.loading && `...${props.text}...`}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n\thandleData,\r\n\tcheckAnagrams,\r\n\tgetXLengthWords\r\n} from '../helpers/createTree';\r\nimport Loader from './Loader';\r\nimport './v1.css';\r\n\r\nconst V1 = (props) => {\r\n\tconst [ listSize, setListSize ] = useState('small');\r\n\r\n\tconst [ searchTerm, setSearchTerm ] = useState('');\r\n\tconst [ searchInput, setSearchInput ] = useState('');\r\n\tconst [ displayAnagrams, setDisplayAnagrams ] = useState([]);\r\n\r\n\tconst [ searchNumber, setSearchNumber ] = useState('');\r\n\tconst [ searchNumberInput, setSearchNumberInput ] = useState('');\r\n\tconst [ displayLengthAnagrams, setDisplayLengthAnagrams ] = useState([]);\r\n\tconst [ tree, setTree ] = useState({});\r\n\tconst [ wordsArray, setWordsArray ] = useState({});\r\n\r\n\tconst [ isFetching, setIsFetching ] = useState(false);\r\n\tconst [ isSearchLet, setIsSearchLet ] = useState(false);\r\n\tconst [ isSearchLen, setIsSearchLen ] = useState(false);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst getUrl = () => {\r\n\t\t\t\tswitch (listSize) {\r\n\t\t\t\t\tcase 'small':\r\n\t\t\t\t\t\treturn 'https://gist.githubusercontent.com/callumgrayson/452618a6cccc79dcfd5bcada74169d8f/raw/e2afcae22e0da19acafe94818fd237da855bbc2c/corncob.txt';\r\n\t\t\t\t\tcase 'large':\r\n\t\t\t\t\t\treturn 'https://gist.githubusercontent.com/callumgrayson/caf0f4f67ecbbd13579441a59facfefc/raw/61c2ce99798596bcf2203b91801e64d4ba0545c8/words.txt';\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst getData = async () => {\r\n\t\t\t\tlet data = {};\r\n\r\n\t\t\t\t// console.log('tree', tree);\r\n\t\t\t\tif (wordsArray && wordsArray.hasOwnProperty(listSize)) {\r\n\t\t\t\t\t// console.log(\r\n\t\t\t\t\t// \t'wordsArray.hasOwnProperty(listSize)',\r\n\t\t\t\t\t// \twordsArray.hasOwnProperty(listSize)\r\n\t\t\t\t\t// );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// console.log(\r\n\t\t\t\t// \t'localStorage.hasOwnProperty(listSize), listSize',\r\n\t\t\t\t// \tlocalStorage.hasOwnProperty(listSize),\r\n\t\t\t\t// \tlistSize\r\n\t\t\t\t// );\r\n\r\n\t\t\t\tif (!localStorage.hasOwnProperty(listSize)) {\r\n\t\t\t\t\tconst url = getUrl();\r\n\t\t\t\t\tsetIsFetching(true);\r\n\t\t\t\t\tconst res = await fetch(url);\r\n\t\t\t\t\tdata = await res.text();\r\n\t\t\t\t\t// console.log('data', data);\r\n\t\t\t\t\tlocalStorage.setItem(listSize, data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata = localStorage.getItem(listSize);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// console.log('data[listSize]', data[listSize]);\r\n\t\t\t\tlet start = Date.now();\r\n\t\t\t\tconst [ wTree, wArr ] = await handleData(data);\r\n\t\t\t\t// console.log('wTree, wArr', wTree, wArr);\r\n\t\t\t\tlet end = Date.now();\r\n\t\t\t\tlet dur = end - start;\r\n\t\t\t\tconsole.log('Array preparation duration', dur);\r\n\r\n\t\t\t\t// console.log('tree', tree);\r\n\t\t\t\tconst newTree = { ...tree, [listSize]: wTree };\r\n\t\t\t\tconst newArr = { ...wordsArray, [listSize]: wArr };\r\n\t\t\t\tsetTree(newTree);\r\n\t\t\t\tsetWordsArray(newArr);\r\n\t\t\t\tsetIsFetching(false);\r\n\t\t\t};\r\n\r\n\t\t\tgetData();\r\n\t\t},\r\n\t\t[ listSize, tree, wordsArray ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t// console.log('tree', tree);\r\n\t\t\tconst getAnagrams = async (inTerm) => {\r\n\t\t\t\t// let anags = await checkAnagrams(inTerm, tree[listSize]);\r\n\t\t\t\tsetIsSearchLet(true);\r\n\t\t\t\tlet anags = await checkAnagrams(inTerm, wordsArray[listSize]);\r\n\t\t\t\tif (searchTerm && !anags.length) {\r\n\t\t\t\t\tanags = [ 'There are no anagrams' ];\r\n\t\t\t\t}\r\n\t\t\t\tsetDisplayAnagrams(anags);\r\n\t\t\t\tsetIsSearchLet(false);\r\n\t\t\t};\r\n\r\n\t\t\tif (searchTerm && wordsArray.hasOwnProperty(listSize))\r\n\t\t\t\tgetAnagrams(searchTerm);\r\n\t\t},\r\n\t\t[ searchTerm, wordsArray, listSize ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t// console.log('wordsArray', wordsArray);\r\n\t\t\tconst getAnagrams = async (inLength) => {\r\n\t\t\t\tsetIsSearchLen(true);\r\n\t\t\t\tlet anags = await getXLengthWords(\r\n\t\t\t\t\tinLength,\r\n\t\t\t\t\twordsArray[listSize]\r\n\t\t\t\t);\r\n\t\t\t\tif (searchNumber && !anags.length) {\r\n\t\t\t\t\tanags = [ [ 'There are no anagrams' ] ];\r\n\t\t\t\t}\r\n\t\t\t\tsetDisplayLengthAnagrams(anags);\r\n\t\t\t\tsetIsSearchLen(false);\r\n\t\t\t};\r\n\r\n\t\t\tif (searchNumber && wordsArray.hasOwnProperty(listSize))\r\n\t\t\t\tgetAnagrams(searchNumber);\r\n\t\t},\r\n\t\t[ searchNumber, wordsArray, listSize ]\r\n\t);\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetSearchInput(e.target.value);\r\n\t};\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetSearchTerm(searchInput);\r\n\t};\r\n\r\n\tconst handleNumberChange = (e) => {\r\n\t\tsetSearchNumberInput(e.target.value);\r\n\t};\r\n\tconst handleLengthSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetSearchNumber(searchNumberInput);\r\n\t};\r\n\r\n\tconst prepareLengthAnagrams = (list) => {\r\n\t\tif (list.length < 1) return [ { 0: [ '' ] } ];\r\n\t\tconst outObj = {};\r\n\t\tlist.forEach((el) => {\r\n\t\t\tconst len = el.length;\r\n\t\t\tif (outObj.hasOwnProperty(len)) {\r\n\t\t\t\toutObj[len].push(el);\r\n\t\t\t} else {\r\n\t\t\t\toutObj[len] = [ el ];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst descendingLengths = Object.keys(outObj).sort((a, b) => b - a);\r\n\t\tconst outArr = descendingLengths.map((key) => {\r\n\t\t\treturn { [key]: outObj[key] };\r\n\t\t});\r\n\t\treturn outArr;\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"v1\">\r\n\t\t\t<div>\r\n\t\t\t\t<span>Dictionary size: </span>\r\n\t\t\t\t<select\r\n\t\t\t\t\tvalue={listSize}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t// console.log('e.target.value', e.target.value);\r\n\t\t\t\t\t\tsetListSize(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"small\">Small (58k)</option>\r\n\t\t\t\t\t<option value=\"large\">Large (230k)</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<Loader loading={isFetching} text=\"Loading\" />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Anagrams by letters</h3>\r\n\t\t\t\t<div className={`formBox${isFetching && ' isFetching'}`}>\r\n\t\t\t\t\t{!isFetching && (\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={searchInput}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tmaxLength={29}\r\n\t\t\t\t\t\t\t\tplaceholder=\"enter word/letters\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button onClick={handleSubmit}>Search</button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{isSearchLet ? (\r\n\t\t\t\t\t\t<Loader loading={isSearchLet} text=\"Searching\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{displayAnagrams &&\r\n\t\t\t\t\t\t\t\tdisplayAnagrams.map((ana, i) => {\r\n\t\t\t\t\t\t\t\t\treturn <li key={`${i}${ana}`}>{ana}</li>;\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Anagrams by length</h3>\r\n\t\t\t\t<div className={`formBox${isFetching && ' isFetching'}`}>\r\n\t\t\t\t\t{!isFetching && (\r\n\t\t\t\t\t\t<form onSubmit={handleLengthSubmit}>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tmin={2}\r\n\t\t\t\t\t\t\t\tmax={29}\r\n\t\t\t\t\t\t\t\tvalue={searchNumberInput}\r\n\t\t\t\t\t\t\t\tonChange={handleNumberChange}\r\n\t\t\t\t\t\t\t\tplaceholder=\"enter word length\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tstyle={{ width: '173px' }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button onClick={handleLengthSubmit}>Search</button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{isSearchLen ? (\r\n\t\t\t\t\t\t<Loader loading={isSearchLen} text=\"Searching\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tdisplayLengthAnagrams.length > 0 &&\r\n\t\t\t\t\t\tprepareLengthAnagrams(\r\n\t\t\t\t\t\t\tdisplayLengthAnagrams\r\n\t\t\t\t\t\t).map((obj) => {\r\n\t\t\t\t\t\t\tlet len = obj ? Object.keys(obj)[0] : 0;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={len}>\r\n\t\t\t\t\t\t\t\t\t<h4>{len === '1' ? 0 : len} variations</h4>\r\n\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t{obj[len].map((ana, i) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn Array.isArray(ana) &&\r\n\t\t\t\t\t\t\t\t\t\t\tana.length ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li key={`${i}${ana[0]}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ana.join(' - ')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\tana\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default V1;\r\n","import React from 'react';\n\nimport V1 from './components/v1';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h2>Anagrams</h2>\n\t\t\t<V1 />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}